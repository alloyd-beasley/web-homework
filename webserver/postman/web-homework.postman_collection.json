{
	"info": {
		"_postman_id": "a1cf4261-781a-4176-ac7a-c7357f6bdf7e",
		"name": "web-homework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "mutations",
			"item": [
				{
					"name": "addTransaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"addTransaction returns correct transaction\", function () {\r",
									"\r",
									"    var variables = JSON.parse(pm.request.body.graphql.variables);    \r",
									"    var res = pm.response.json().data.addTransaction;\r",
									"\r",
									"    for(const variable in variables) {\r",
									"        pm.expect(res[variable]).to.eql(variables[variable])\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addTransaction ($user_id: String, $description: String, $merchant_id: String, $debit: Boolean, $credit: Boolean, $amount: Float) {\n    addTransaction (user_id: $user_id, description: $description, merchant_id: $merchant_id, debit: $debit, credit: $credit, amount: $amount) {\n        id\n        user_id\n        description\n        merchant_id\n        debit\n        credit\n        amount\n    }\n}",
								"variables": "{  \n  \"user_id\": \"andrew_b\",\n  \"description\": \"this is the third tx\",\n  \"merchant_id\": \"at my desk corp\",\n  \"debit\": false,\n  \"credit\": true,\n  \"amount\": 12.73\n}\n"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						},
						"description": "Add a single transaction."
					},
					"response": []
				},
				{
					"name": "editTransactionById",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation editTransactionById ($id: String, $user_id: String, $description: String, $merchant_id: String, $debit: Boolean, $credit: Boolean, $amount: Float) {\r\n    editTransactionById (id: $id, user_id: $user_id, description: $description, merchant_id: $merchant_id, debit: $debit, credit: $credit, amount: $amount) {\r\n        id\r\n        user_id\r\n        description\r\n        merchant_id\r\n        debit\r\n        credit\r\n        amount\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"600df59e4999eb0d545d3417\",\r\n    \"user_id\": \"test edit\"\r\n}"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeTransactionById",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeTransactionById ($id: String) {\r\n    removeTransactionById (id: $id) {\r\n        id\r\n    }\r\n}",
								"variables": "{\r\n    \"id\":\"600df1684999eb0d545d3415\"\r\n}"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "queries",
			"item": [
				{
					"name": "transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query transaction ($id: String) {\n    transaction (id: $id) {\n        id\n        user_id\n        description\n        merchant_id\n        debit\n        credit\n        amount\n    }\n}",
								"variables": "{\n  \"id\": \"5d6ede6a0ba62570afcedd3a\"\n}"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						},
						"description": "Get single transaction by transaction id."
					},
					"response": []
				},
				{
					"name": "transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query transactions{\r\n    transactions {\r\n        id\r\n        user_id\r\n        description\r\n        merchant_id\r\n        debit\r\n        credit\r\n        amount\r\n    }\r\n}",
								"variables": "{\r\n  \"user_id\": \"andrew_b\"\r\n}"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						},
						"description": "Get all transactions with no arguments passed in. "
					},
					"response": []
				},
				{
					"name": "transactions by user_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"user_id\", \"andrew_b\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    var res = pm.response.json();\r",
									"    var ids = res.data.transactions.filter(i => i.user_id == pm.variables.get(\"user_id\"))       \r",
									"\r",
									"    pm.expect(ids.length).to.equal(res.data.transactions.length);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/graphql",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query transactions($user_id: String){\r\n    transactions(user_id: $user_id) {\r\n        id\r\n        user_id\r\n        description\r\n        merchant_id\r\n        debit\r\n        credit\r\n        amount\r\n    }\r\n}",
								"variables": "{\r\n  \"user_id\": \"andrew_b\"\r\n}"
							}
						},
						"url": {
							"raw": "localhost:8000/graphql",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"graphql"
							]
						},
						"description": "Get all transactions by specified user_id. "
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"type": "any",
			"description": {
				"content": "URL for the request.",
				"type": "text/plain"
			}
		}
	]
}